sudo: required
dist: trusty
language: cpp
matrix:
include:
  - compiler: gcc
    addons:
  coverity_scan:
    project:
      name: "djmott/xtl"
      description: "Build submitted via Travis CI"
    notification_email: mott.david.j@gmail.com
    build_command_prepend: "cmake ."
    build_command:   "make"
    branch_pattern: master
      apt:
        sources:
          - ubuntu-toolchain-r-test
        packages:
          - g++-5
    env: COMPILER=g++-5
       - secure: "r5Zw5rky1nV4QiqaHKMQJTwC+mSfkko7ouYI2F8ah1BIULXijU+PZTtbP4Q8pmoDR9H7p6wuGTevWg9YplY8xbiwc5Vo5UiSDmVnKXEY8ckA+gCJK3iJSFqFbbRbVgiBj2KdGy9LWzS0akROKC5EXT25D84GbDLKf9T8m1ot5VvxAH5zteEdvDsYzRKAET4E2q9+k0N1fFNRC1nT6IEt0+n7vR0tKOnYfv//DbmRXguUAPV7/U35SSW77q2kaXggp6TiXVA1V9/3piIuE24SqxYZFPLkq7M8umP+vANgPHJgfpMTlH5cxW4vbp+S1hvB0qenT5VQPhGXyQhwGdRtW2Fy645pVVRB7Fi0SVfdaUyGLSMG4Z5toC5nSpPnYPH0XjZarzyEXQR+jVkFBP6fcslRkT4IRfDGYWpnDPrIzYVR9Lqcy3U1qGU7gMCcCUU0HE7moyEZZtc3CW2jzZf12XEWBaAlaqtEFBRqgZG5m8pA9Faeb0Bm0NzpXKYNO2GisGUpZ1+KiSIXWcUXgN83lZgLqmXOve9di2MhVKuyCwLfrQJhz3HzxLn5VBCkVn+wilPg7lW/gOooOsdupAPtDQw3L1Xn1CiFZ5IR4iKjz+Kkjww46OjTU+embxH0WG28kEb6N2AY6SWBwy5vaSo1rD7+D6vnbbTg4uHwX4M8n7E="

before_install:
  - mkdir -p      $TRAVIS_BUILD_DIR/docs/reports/cppcheck       $TRAVIS_BUILD_DIR/docs/reports/gcov        $TRAVIS_BUILD_DIR/docs/reports/gtest
  - mkdir -p      $TRAVIS_BUILD_DIR/docs/reports/make           $TRAVIS_BUILD_DIR/docs/reports/oclint      $TRAVIS_BUILD_DIR/docs/reports/rats
  - mkdir -p      $TRAVIS_BUILD_DIR/docs/reports/valgrind       $TRAVIS_BUILD_DIR/docs/reports/vera++      $TRAVIS_BUILD_DIR/docs/reports/lcov
  - mkdir -p      $TRAVIS_BUILD_DIR/docs/html                   $TRAVIS_BUILD_DIR/3rdparty                 $TRAVIS_BUILD_DIR/build
  - pip install --user cpp-coveralls
  - sudo apt-get update -qq
  - sudo apt-get install -y -qq lcov gcovr curl libgtest-dev unzip valgrind rats cppcheck vera++ uuid-dev
  - cd /usr/src/gtest
  - sudo cmake .
  - sudo cmake --build .
  - sudo mv libg* /usr/local/lib/
  - cd $TRAVIS_BUILD_DIR/3rdparty
  - wget https://sonarsource.bintray.com/Distribution/sonar-scanner-cli/sonar-scanner-2.6.1.zip
  - wget https://sonarqube.com/static/cpp/build-wrapper-linux-x86.zip
  - unzip sonar-scanner-2.6.1.zip
  - unzip build-wrapper-linux-x86.zip
  - export PATH=$PWD/sonar-scanner-2.6.1/bin:$PWD/build-wrapper-linux-x86:$PATH
script:
  - cd $TRAVIS_BUILD_DIR/build
  - cmake -DCMAKE_BUILD_TYPE=Debug -DCMAKE_EXPORT_COMPILE_COMMANDS=TRUE -DXTD_CI_BUILD=TRUE .. 2>&1 | tee ../docs/reports/make/cmake.log
  - build-wrapper-linux-x86-64 --out-dir . make clean all coverage_tests examples
  - $TRAVIS_BUILD_DIR/build/tests/coverage_tests --xml:$TRAVIS_BUILD_DIR/docs/reports/gtest
  - cd $TRAVIS_BUILD_DIR/
  - valgrind --tool=memcheck -v --trace-children=yes --xml=yes --xml-file=docs/reports/valgrind/coverage_tests.memcheck.xml $TRAVIS_BUILD_DIR/build/tests/coverage_tests
  - for item in $(find src -type f); do vera++ -x docs/reports/vera++/$(basename $item).xml $item > /dev/null; done
  - for item in $(find include -type f); do vera++ -x docs/reports/vera++/$(basename $item).xml $item > /dev/null; done
  - for item in $(find include -name *.hpp); do cppcheck --inline-suppr --suppressions-list=assets/cppcheck-suppressions.txt --std=c++11 --platform=unix64 --enable=all --xml-version=2 $item 2> docs/reports/cppcheck/$(basename $item).xml; done
  - for item in $(find src -name *.cpp); do cppcheck --inline-suppr --suppressions-list=assets/cppcheck-suppressions.txt --std=c++11 --platform=unix64 --enable=all --xml-version=2 $item 2> docs/reports/cppcheck/$(basename $item).xml; done
  - rats --xml -w 3 src include > docs/reports/rats/rats.xml
  - cd $TRAVIS_BUILD_DIR/build/tests
  - if [ -e "$(ls *.xml)" ]; then cp *.xml $TRAVIS_BUILD_DIR/docs/reports/gtest; fi
  - for item in $( find -name '*.gcda' ); do gcov -l $item; done
  - for item in $( find -name '*.gcda' ); do gcovr -x -r .  > $TRAVIS_BUILD_DIR/docs/reports/gcov/$(basename $item).xml; done
  - cd $TRAVIS_BUILD_DIR/
  - cp assets/sonar* .
  - sonar-scanner -e -X -Dsonar.host.url=https://nemo.sonarqube.org -Dsonar.login=$SONAR_TOKEN
success:
  - cd $TRAVIS_BUILD_DIR/docs/html
  - git init
  - git remote add docs git@github.com:djmott/xtd-docs.git
  - git pull
  - cd $TRAVIS_BUILD_DIR/build
  - make docs
  - cd $TRAVIS_BUILD_DIR/docs/html
  - git commit -am "travis-ci documentation update"
  - git push docs master
after_success:
  - coveralls
